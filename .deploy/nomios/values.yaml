global:
  codefresh: codefresh
# Default values for nomios.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# global.istio.enabled is for using istio for several versions of same service in same namespace
# global.istio.enableForSupportingStabeLatestEnvironments is for using istio just to route traffic to latest or stable version which are in different namespaces
global:
  codefresh: codefresh
  stableVersion: latest
  istio:
    enabled: false
    enableForSupportingStabeLatestEnvironments: false
  #Change it in cases we need to override service name prefix. Needed for Canary deployment with nginx ingress controller
  #releaseNameOverride: production

# used if we want to enable istio only for this service
istio:
  enabled: false

replicaCount: 1
image:
  name: codefresh/nomios
  dockerRegistry: gcr.io/codefresh-inc/
  pullPolicy: Always
imageTag: 0.5

# set log level
logLevel: debug

# true - set log format to Codefresh JSON
logJSON: false

# set event handler type and kind
event:
  type: registry
  kind: dockerhub
  action: push

# Hermes Service name - deafult to "<release>-hermes"
# hermesService: "..."

# publicDnsName - default to global.appUrl, if empty to "https://g.codefresh.io"
# publicDnsName: "..."
  
service:
  name: nomios
  type: ClusterIP
  externalPort: 80
  internalPort: 8080

ingress:
  enabled: true
  # specify host
  # host: triggers.dev.codefresh.io

  #specify path
  # IMPORTANT!!!
  # - GCE requires * at the end
  # - Nginx requires no star
  path: /nomios/
  
  # Used to create an Ingress record
  annotations:
    # GCE Ingress Controller
    # kubernetes.io/ingress.class: "gce"
    # Nginx Ingress controller (default)
    kubernetes.io/ingress.class: nginx-codefresh
    nginx.ingress.kubernetes.io/service-upstream: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.org/redirect-to-https: "false"
    # Other Ingress settings
    # kubernetes.io/tls-acme: "true"

